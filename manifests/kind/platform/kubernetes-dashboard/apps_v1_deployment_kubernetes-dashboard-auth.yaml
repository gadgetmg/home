apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: auth
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
  name: kubernetes-dashboard-auth
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations:
        checksum/config: e060d660b027f158643870ece670dc9ba7773f22130c925274cce22e53a39aab
      labels:
        app.kubernetes.io/component: auth
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/name: kubernetes-dashboard-auth
        app.kubernetes.io/part-of: kubernetes-dashboard
    spec:
      automountServiceAccountToken: true
      containers:
      - args: null
        env:
        - name: CSRF_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: kubernetes-dashboard-csrf
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-auth:1.2.3
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-auth
        ports:
        - containerPort: 8000
          name: auth
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: tmp-volume
