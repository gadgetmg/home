apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/component: hooks
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.2.7
    helm.sh/chart: kyverno-3.2.7
  name: kyverno-clean-reports
  namespace: kyverno
spec:
  backoffLimit: 2
  template:
    metadata: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - "set -euo pipefail\nNAMESPACES=$(kubectl get namespaces --no-headers=true
          | awk '{print $1}')\n\nfor ns in ${NAMESPACES[@]};\ndo\n  COUNT=$(kubectl
          get policyreports.wgpolicyk8s.io -n $ns --no-headers=true | awk '/pol/{print
          $1}' | wc -l)\n\n  if [ $COUNT -gt 0 ]; then\n    echo \"deleting $COUNT
          policyreports in namespace $ns\"\n    kubectl get policyreports.wgpolicyk8s.io
          -n $ns --no-headers=true | awk '/pol/{print $1}' | xargs kubectl delete
          -n $ns policyreports.wgpolicyk8s.io\n  else\n    echo \"no policyreports
          in namespace $ns\"\n  fi\ndone\n\nCOUNT=$(kubectl get clusterpolicyreports.wgpolicyk8s.io
          --no-headers=true | awk '/pol/{print $1}' | wc -l)\n  \nif [ $COUNT -gt
          0 ]; then\n  echo \"deleting $COUNT clusterpolicyreports\"\n  kubectl get
          clusterpolicyreports.wgpolicyk8s.io --no-headers=true | awk '/pol/{print
          $1}' | xargs kubectl delete clusterpolicyreports.wgpolicyk8s.io\nelse\n
          \ echo \"no clusterpolicyreports\"\nfi\n"
        image: bitnami/kubectl:1.28.5
        imagePullPolicy: null
        name: kubectl
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Never
      serviceAccount: kyverno-admission-controller
