apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
  name: argocd-dex-server
  namespace: argocd
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-dex-server
  template:
    metadata:
      annotations:
        checksum/cm: 79aa8532f5d41227fe5cf42aaa4fc309b7ee95090073e0011a66305d5bb267e6
        checksum/cmd-params: 35060c13653407cc0b1e839f1c3643748ef862d78001a0bfb8cf33bb1af8e6e8
      labels:
        app.kubernetes.io/component: dex-server
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/name: argocd-dex-server
        app.kubernetes.io/part-of: argocd
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-dex-server
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - rundex
        command:
        - /shared/argocd-dex
        env:
        - name: ARGOCD_DEX_SERVER_LOGFORMAT
          valueFrom:
            configMapKeyRef:
              key: dexserver.log.format
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_DEX_SERVER_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: dexserver.log.level
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_LOG_FORMAT_TIMESTAMP
          valueFrom:
            configMapKeyRef:
              key: log.format.timestamp
              name: argocd-cmd-params-cm
              optional: true
        - name: ARGOCD_DEX_SERVER_DISABLE_TLS
          valueFrom:
            configMapKeyRef:
              key: dexserver.disable.tls
              name: argocd-cmd-params-cm
              optional: true
        image: ghcr.io/dexidp/dex:v2.43.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz/live
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: dex-server
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        - containerPort: 5557
          name: grpc
          protocol: TCP
        - containerPort: 5558
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz/ready
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
        - mountPath: /tls
          name: argocd-dex-server-tls
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/cp
        - -n
        - /usr/local/bin/argocd
        - /shared/argocd-dex
        image: quay.io/argoproj/argocd:v3.0.11
        imagePullPolicy: IfNotPresent
        name: copyutil
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /shared
          name: static-files
        - mountPath: /tmp
          name: dexconfig
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: argocd-dex-server
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: static-files
      - emptyDir: {}
        name: dexconfig
      - name: argocd-dex-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-dex-server-tls
