apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: vcluster-argocd-secret-sync
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  generateExisting: true
  rules:
  - name: sync-secret
    match:
      any:
      - resources:
          names:
          - "vc-*"
          kinds:
          - Secret
    exclude:
      any:
      - resources:
          namespaces:
          - kube-system
          - default
          - kube-public
          - kyverno
    context:
    - name: namespace
      variable:
        value: "{{ request.object.metadata.namespace }}"
    - name: name
      variable:
        value: "{{ request.object.metadata.name }}"
    - name: ca
      variable:
        value: "{{ request.object.data.\"certificate-authority\" }}"
    - name: cert
      variable:
        value: "{{ request.object.data.\"client-certificate\" }}"
    - name: key
      variable:
        value: "{{ request.object.data.\"client-key\" }}"
    - name: vclusterName
      variable:
        value: "{{ replace_all(namespace, 'vcluster-', '') }}"
        jmesPath: 'to_string(@)'
    generate:
      kind: Secret
      apiVersion: v1
      name: "{{ vclusterName }}"
      namespace: argocd
      synchronize: true
      data:
        kind: Secret
        metadata:
          labels:
            argocd.argoproj.io/secret-type: cluster
        stringData:
          name: "{{ vclusterName }}"
          server: "https://{{ vclusterName }}.{{ namespace }}:443"
          config: |
            {
              "tlsClientConfig": {
                "insecure": false,
                "caData": "{{ ca }}",
                "certData": "{{ cert }}",
                "keyData": "{{ key }}"
              }
            }
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: keycloak-argocd-secret-sync
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  generateExisting: true
  rules:
  - name: sync-secret
    match:
      resources:
        kinds: [Client]
        names: [argocd]
    context:
    - name: secret_name
      variable:
        jmesPath: request.object.spec.publishConnectionDetailsTo.name
    - name: client_secret
      apiCall:
        method: GET
        urlPath: /api/v1/namespaces/crossplane-system/secrets/{{secret_name}}
        jmesPath: data."attribute.client_secret" | base64_decode(@)
    generate:
      apiVersion: v1
      kind: Secret
      name: argocd-oidc-secret
      namespace: argocd
      synchronize: true
      data:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
        type: Opaque
        data:
          client_secret: '{{ client_secret | base64_encode(@) }}'
---
