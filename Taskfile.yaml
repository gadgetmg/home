# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

output: prefixed

run: when_changed

env:
  # renovate: datasource=github-releases depName=siderolabs/talos
  TALOS_VERSION: v1.9.2
  # renovate: datasource=github-releases depName=kubernetes/kubernetes
  KUBERNETES_VERSION: v1.32.1

tasks:
  clusters:dev:create:
    cmds:
    - clusters/dev/scripts/create-cluster.sh
    - kubectl create namespace argocd
    - helm template argocd argo-cd -n argocd --repo https://argoproj.github.io/argo-helm | kubectl create -f -
    status:
    - docker ps | grep dev-controlplane-1

  clusters:dev:destroy:
    cmds:
    - defer: talosctl config context "" && talosctl config remove dev --noconfirm
    - defer: kubectl config unset current-context
    - defer: kubectl config delete-context admin@dev
    - defer: kubectl config delete-user admin@dev
    - defer: kubectl config delete-cluster dev
    - talosctl cluster destroy --name dev

  clusters:production:genconfig:
    cmds:
    - talhelper genconfig

  clusters:production:apply-insecure:
    deps: ['clusters:production:genconfig']
    cmds:
    - talhelper gencommand apply --extra-flags "--insecure" | sh

  clusters:production:bootstrap:
    deps: ['clusters:production:genconfig']
    cmds:
    - talhelper gencommand bootstrap | sh
    - talosctl health -n 10.1.2.11 --talosconfig=./clusterconfig/talosconfig
    - talhelper gencommand kubeconfig | sh
    - kubectl create namespace argocd
    - helm template argocd argo-cd -n argocd --repo https://argoproj.github.io/argo-helm | kubectl create -f -

  build:
    label: build-{{ .KUSTOMIZATION | replace "/" "-" }}
    sources:
    - '{{ .KUSTOMIZATION }}/**/*'
    - '{{ .KUSTOMIZATION }}/../base/**/*'
    vars:
      APPLICATION: '{{ dir .KUSTOMIZATION | trimPrefix .ROOT_DIR | trimPrefix "/" }}'
      ENVIRONMENT: '{{ base .KUSTOMIZATION }}'
      OUTDIR: '{{ .ROOT_DIR }}/manifests/{{ .ENVIRONMENT }}/{{ .APPLICATION }}/'
    generates:
    - '{{ .OUTDIR }}**'
    cmds:
    - mkdir -p {{ .OUTDIR }}
    - rm -rf {{ .OUTDIR }}**
    - kustomize build --enable-helm --enable-alpha-plugins {{ .KUSTOMIZATION }} -o {{ .OUTDIR }}
    - find {{ .OUTDIR }} -name '*:*' -exec bash -c 'mv $0 $(echo $0 | tr ":" "-")' {} \;
    - git add --intent-to-add {{ .OUTDIR }}
    internal: true

  hydrate:
    sources:
    - infrastructure/controllers/*/*[^base]/kustomization.yaml
    - infrastructure/*/*[^base]/kustomization.yaml
    - platform/*/*[^base]/kustomization.yaml
    - apps/*/*[^base]/kustomization.yaml
    cmds:
    - for: sources
      task: build
      vars:
        KUSTOMIZATION: '{{ dir .ITEM }}'
    method: none

  kubeconform:
    sources:
    - manifests/**/*
    cmds:
    - kubeconform -output pretty
        -kubernetes-version {{ .KUBERNETES_VERSION | trimPrefix "v" }}
        -schema-location default
        -schema-location 'schemas/{{`{{.Group}}`}}/{{`{{.ResourceKind}}`}}_{{`{{.ResourceAPIVersion}}`}}.json'
        -skip CustomResourceDefinition,EnvoyProxy
        manifests/
