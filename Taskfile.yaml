# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

run: when_changed

shopt: [globstar]

env:
  # renovate: datasource=github-releases depName=siderolabs/talos
  TALOS_VERSION: v1.9.2
  # renovate: datasource=github-releases depName=kubernetes/kubernetes
  KUBERNETES_VERSION: v1.32.1

tasks:
  clusters:kind:create:
    cmds:
    - kind create cluster --config clusters/kind/kind-config.yaml
    - docker run -d --name cloud-provider-kind --rm --network kind -v /var/run/docker.sock:/var/run/docker.sock registry.k8s.io/cloud-provider-kind/cloud-controller-manager:v0.5.0
    status:
    - kind get clusters | grep ^kind$

  clusters:kind:delete:
    cmds:
    - kind delete cluster
    - docker stop cloud-provider-kind
    status:
    - '! kind get clusters | grep ^kind$'

  clusters:production:genconfig:
    cmds:
    - talhelper genconfig

  clusters:production:apply-insecure:
    deps: ["clusters:production:genconfig"]
    cmds:
    - talhelper gencommand apply --extra-flags "--insecure" | sh

  clusters:production:bootstrap:
    deps: ["clusters:production:genconfig"]
    cmds:
    - talhelper gencommand bootstrap | sh
    - talosctl health -n 10.1.2.11 --talosconfig=./clusterconfig/talosconfig
    - talhelper gencommand kubeconfig | sh
    - kubectl create namespace argocd
    - helm template argocd argo-cd -n argocd --repo https://argoproj.github.io/argo-helm | kubectl create -f -

  build *:
    vars:
      KUSTOMIZATION: '{{ index .MATCH 0 }}'
      APPLICATION: '{{ dir .KUSTOMIZATION }}'
      ENVIRONMENT: "{{ base .KUSTOMIZATION }}"
      OUTDIR: "manifests/{{ .ENVIRONMENT }}/{{ .APPLICATION }}"
    label: build-{{ .KUSTOMIZATION | replace "/" "-" }}
    sources:
    - "{{ .KUSTOMIZATION }}/../base/**/*"
    - "{{ .KUSTOMIZATION }}/**/*"
    - shared/**/*
    generates:
    - "{{ .OUTDIR }}/**/*"
    cmds:
    - rm -rf {{ .OUTDIR }}/**
    - mkdir -p {{ .OUTDIR }}
    - kustomize build --enable-helm --enable-alpha-plugins {{ .KUSTOMIZATION }} -o {{ .OUTDIR }}/
    # Replace colons with dashes in filenames
    - find {{ .OUTDIR }} -name '*:*' -exec bash -c 'mv $0 $(echo $0 | tr ":" "-")' {} \;

  hydrate:
    vars:
      DIRS:
        sh: find infrastructure/controllers infrastructure/configs infrastructure platform apps -maxdepth 3 -name kustomization.yaml -not -path "*/base/*" -exec dirname {} \;
    cmds:
    - for: {var: DIRS}
      task: build {{ .ITEM }}
    - git add --intent-to-add manifests/
    method: none
    silent: true

  kubeconform:
    sources:
    - manifests/**/*
    cmds:
    - kubeconform -output pretty -kubernetes-version {{ .KUBERNETES_VERSION | trimPrefix "v" }} -schema-location default -schema-location 'schemas/{{`{{.Group}}`}}/{{`{{.ResourceKind}}`}}_{{`{{.ResourceAPIVersion}}`}}.json' -skip CustomResourceDefinition,EnvoyProxy manifests/

  renovate:
    env:
      LOG_LEVEL: DEBUG
      GITHUB_COM_TOKEN:
        sh: gh auth token
    cmds:
    - renovate --platform=local
