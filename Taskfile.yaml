# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

run: when_changed

env:
  # renovate: datasource=github-releases depName=siderolabs/talos
  TALOS_VERSION: v1.10.5
  # renovate: datasource=github-releases depName=kubernetes/kubernetes
  KUBERNETES_VERSION: v1.33.2

vars:
  BUILD_ARGS: --load-restrictor LoadRestrictionsNone --enable-helm --enable-alpha-plugins
  BUILD_DIRS: infrastructure platform apps
  ENV: kind

includes:
  production:
    taskfile: clusters/production/Taskfile.yaml
    dir: clusters/production
  kind:
    taskfile: clusters/kind/Taskfile.yaml
    dir: clusters/kind
  tests: tests/tasks.yaml

tasks:
  kubeconform:
    cmd: kubeconform -output pretty -kubernetes-version {{.KUBERNETES_VERSION | trimPrefix "v"}} -schema-location default -schema-location 'schemas/{{`{{.Group}}`}}/{{`{{.ResourceKind}}`}}_{{`{{.ResourceAPIVersion}}`}}.json' -skip CustomResourceDefinition,EnvoyProxy,Backend,SecurityPolicy manifests/
    sources:
    - manifests/**/*

  renovate:
    env:
      LOG_LEVEL: DEBUG
      GITHUB_COM_TOKEN: {sh: gh auth token}
    cmds:
    - renovate --platform=local

  build:
    internal: true
    label: build {{.APP}} {{.ENV}}
    requires:
      vars: [APP, ENV]
    cmds:
    - rm -rf manifests/{{.ENV}}/{{.APP}}
    - mkdir -p manifests/{{.ENV}}/{{.APP}}
    - kustomize build {{.BUILD_ARGS}} {{.APP}}/{{.ENV}} -o manifests/{{.ENV}}/{{.APP}}
    - find manifests/{{.ENV}}/{{.APP}} -name '*:*' -exec sh -c 'f="{}"; mv -- "$f" "${f//:/-}"' \;
    sources:
    - '{{.APP}}/**/*'
    - shared/**/*
    generates:
    - manifests/{{.ENV}}/{{.APP}}/**/*

  hydrate:
    vars:
      TARGETS: {sh: 'find {{.BUILD_DIRS}} -name base -prune -o -type d -exec test -e {}/kustomization.yaml \; -print -prune'}
    cmds:
    - for: {var: TARGETS, as: DIR}
      vars: {APP: '{{dir .DIR}}', ENV: '{{base .DIR}}'}
      task: build
    - git add --intent-to-add manifests

  deploy:
    label: deploy {{.APP}} {{.ENV}}
    deps: [{task: build, vars: {APP: '{{.APP}}', ENV: '{{.ENV}}'}}]
    requires:
      vars: [APP, ENV]
    cmd: kapp deploy -y -a {{base .APP}} -f manifests/{{.ENV}}/{{.APP}}
    sources:
    - manifests/{{.ENV}}/{{.APP}}/**/*

  apps:actual:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:controllers:kyverno
    - infrastructure:controllers:trust-manager
    - platform:idp
    cmds:
    - task: deploy
      vars: {APP: apps/actual}

  apps:ezxss:
    deps: ['infrastructure:controllers:mariadb-operator']
    cmds:
    - task: deploy
      vars: {APP: apps/ezxss}

  apps:paperless-ngx:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:controllers:kyverno
    - infrastructure:controllers:trust-manager
    - infrastructure:controllers:cnpg
    - infrastructure:controllers:external-secrets
    - platform:idp
    cmds:
    - task: deploy
      vars: {APP: apps/paperless-ngx}

  infrastructure:configs:clusterissuers:
    deps: ['infrastructure:controllers:cert-manager']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/configs/clusterissuers}

  infrastructure:configs:crossplane-keycloak:
    deps: ['infrastructure:controllers:crossplane']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/configs/crossplane-keycloak}

  infrastructure:configs:gatewayclasses:
    deps: ['infrastructure:controllers:envoy-gateway']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/configs/gatewayclasses}

  infrastructure:configs:ipam:
    deps: ['infrastructure:controllers:metallb']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/configs/ipam}

  infrastructure:configs:oidc:
    deps: ['platform:idp']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/configs/oidc}

  infrastructure:controllers:argocd:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:controllers:kyverno
    - infrastructure:controllers:trust-manager
    - platform:idp
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/argocd}

  infrastructure:controllers:cdi:
  - task: deploy
    vars: {APP: infrastructure/controllers/cdi}

  infrastructure:controllers:cert-manager:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/cert-manager}

  infrastructure:controllers:cilium:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/cilium}

  infrastructure:controllers:cloudflare-gateway:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/cloudflare-gateway}

  infrastructure:controllers:cnpg:
  - task: deploy
    vars: {APP: infrastructure/controllers/cnpg}

  infrastructure:controllers:coredns-external:
    deps:
    - infrastructure:crds
    - infrastructure:configs:ipam
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/coredns-external}

  infrastructure:controllers:crossplane:
  - task: deploy
    vars: {APP: infrastructure/controllers/crossplane}

  infrastructure:controllers:envoy-gateway:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/envoy-gateway}

  infrastructure:controllers:external-secrets:
    deps:
    - infrastructure:crds
    - infrastructure:configs:clusterissuers
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/external-secrets}

  infrastructure:controllers:kubevirt:
  - task: deploy
    vars: {APP: infrastructure/controllers/kubevirt}

  infrastructure:controllers:kyverno:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/kyverno}

  infrastructure:controllers:mariadb-operator:
    deps: ['infrastructure:crds']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/mariadb-operator}

  infrastructure:controllers:metallb:
  - task: deploy
    vars: {APP: infrastructure/controllers/metallb}

  infrastructure:controllers:multus:
  - task: deploy
    vars: {APP: infrastructure/controllers/multus}

  infrastructure:controllers:sealed-secrets:
    deps: ['infrastructure:crds:deploy']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/sealed-secrets}

  infrastructure:controllers:trust-manager:
    deps: ['infrastructure:controllers:cert-manager']
    cmds:
    - task: deploy
      vars: {APP: infrastructure/controllers/trust-manager}

  infrastructure:controllers:velero:
  - task: deploy
    vars: {APP: infrastructure/controllers/velero}

  infrastructure:crds:
  - task: deploy
    vars: {APP: infrastructure/crds}

  platform:idp:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:configs:crossplane-keycloak
    - infrastructure:controllers:cnpg
    cmds:
    - task: deploy
      vars: {APP: platform/idp}

  platform:kubernetes-dashboard:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:configs:oidc
    - infrastructure:controllers:kyverno
    - infrastructure:controllers:trust-manager
    - platform:idp
    cmds:
    - task: deploy
      vars: {APP: platform/kubernetes-dashboard}

  platform:monitoring:
    deps:
    - infrastructure:configs:ipam
    - infrastructure:configs:gatewayclasses
    - infrastructure:configs:clusterissuers
    - infrastructure:controllers:kyverno
    - platform:idp
    cmds:
    - task: deploy
      vars: {APP: platform/monitoring}
