# ClusterPolicy to generate secret for OIDC connection from Keycloak client in
# format expected by paperless-ngx. Reads client secret from crossplane output
# and additional attributes from paperless-ngx-socialaccount-config ConfigMap
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: keycloak-paperless-ngx
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  generateExisting: true
  rules:
  - name: keycloak-client-paperless-ngx
    skipBackgroundRequests: true
    match:
      resources:
        kinds: [Client]
        names: [paperless-ngx]
    context:
    - name: secret_name
      variable:
        jmesPath: request.object.spec.publishConnectionDetailsTo.name
    - name: client_secret
      apiCall:
        method: GET
        urlPath: /api/v1/namespaces/crossplane-system/secrets/{{ secret_name }}
        jmesPath: data."attribute.client_secret" | base64_decode(@)
    - name: client
      configMap:
        name: paperless-ngx-socialaccount-config
        namespace: paperless-ngx
    - name: paperlessSocialAccountProviders
      variable:
        value: |
          {
            "openid_connect": {
              "APPS": [
                {
                  "provider_id": "{{ client.data.provider_id }}",
                  "name": "{{ client.data.name }}",
                  "client_id": "{{ client.data.client_id }}",
                  "secret": "{{ client_secret }}",
                  "settings": {
                    "server_url": "{{ client.data.server_url }}"
                  }
                }
              ],
              "OAUTH_PKCE_ENABLED": "True"
            }
          }
    generate:
      apiVersion: v1
      kind: Secret
      name: paperless-ngx-socialaccount-providers
      namespace: paperless-ngx
      synchronize: true
      data:
        type: Opaque
        data:
          PAPERLESS_SOCIALACCOUNT_PROVIDERS: '{{ paperlessSocialAccountProviders | base64_encode(@) }}'
